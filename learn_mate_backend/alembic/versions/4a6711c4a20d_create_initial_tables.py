"""Create initial tables.

Revision ID: 4a6711c4a20d
Revises:
Create Date: 2025-06-25 11:27:44.452621

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "4a6711c4a20d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Create user table first
    op.create_table(
        "user",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)

    # Create thread table
    op.create_table(
        "thread",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create session table
    op.create_table(
        "session",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create conversations table
    op.create_table(
        "conversations",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("summary", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("metadata_json", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_conversations_id"), "conversations", ["id"], unique=False)
    op.create_index(op.f("ix_conversations_is_deleted"), "conversations", ["is_deleted"], unique=False)
    op.create_index(op.f("ix_conversations_user_id"), "conversations", ["user_id"], unique=False)

    # Create chat_messages table (without foreign key to message_branches yet)
    op.create_table(
        "chat_messages",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("conversation_id", sa.Uuid(), nullable=False),
        sa.Column("role", sa.Enum("USER", "ASSISTANT", "SYSTEM", name="messagerole"), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("thinking", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("message_index", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("metadata_json", sa.JSON(), nullable=True),
        sa.Column("branch_id", sa.Uuid(), nullable=True),
        sa.Column("version_number", sa.Integer(), nullable=False),
        sa.Column("is_current_version", sa.Boolean(), nullable=False),
        sa.Column("parent_version_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_version_id"],
            ["chat_messages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "conversation_id",
            "message_index",
            "branch_id",
            "version_number",
            name="unique_conversation_message_branch_version",
        ),
    )
    op.create_index(op.f("ix_chat_messages_branch_id"), "chat_messages", ["branch_id"], unique=False)
    op.create_index(op.f("ix_chat_messages_conversation_id"), "chat_messages", ["conversation_id"], unique=False)
    op.create_index(op.f("ix_chat_messages_created_at"), "chat_messages", ["created_at"], unique=False)
    op.create_index(op.f("ix_chat_messages_id"), "chat_messages", ["id"], unique=False)
    op.create_index(op.f("ix_chat_messages_is_current_version"), "chat_messages", ["is_current_version"], unique=False)
    op.create_index(op.f("ix_chat_messages_message_index"), "chat_messages", ["message_index"], unique=False)
    op.create_index(op.f("ix_chat_messages_parent_version_id"), "chat_messages", ["parent_version_id"], unique=False)
    op.create_index(op.f("ix_chat_messages_version_number"), "chat_messages", ["version_number"], unique=False)

    # Create message_branches table
    op.create_table(
        "message_branches",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("conversation_id", sa.Uuid(), nullable=False),
        sa.Column("parent_message_id", sa.Uuid(), nullable=True),
        sa.Column("sequence_number", sa.Integer(), nullable=False),
        sa.Column("branch_name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_message_id"],
            ["chat_messages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "conversation_id", "parent_message_id", "sequence_number", name="unique_conversation_parent_sequence"
        ),
    )
    op.create_index(op.f("ix_message_branches_conversation_id"), "message_branches", ["conversation_id"], unique=False)
    op.create_index(op.f("ix_message_branches_id"), "message_branches", ["id"], unique=False)
    op.create_index(
        op.f("ix_message_branches_parent_message_id"), "message_branches", ["parent_message_id"], unique=False
    )

    # Now add the foreign key constraint from chat_messages to message_branches
    op.create_foreign_key("chat_messages_branch_id_fkey", "chat_messages", "message_branches", ["branch_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraint first
    op.drop_constraint("chat_messages_branch_id_fkey", "chat_messages", type_="foreignkey")

    # Drop tables in reverse order of creation
    op.drop_index(op.f("ix_message_branches_parent_message_id"), table_name="message_branches")
    op.drop_index(op.f("ix_message_branches_id"), table_name="message_branches")
    op.drop_index(op.f("ix_message_branches_conversation_id"), table_name="message_branches")
    op.drop_table("message_branches")

    op.drop_index(op.f("ix_chat_messages_version_number"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_parent_version_id"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_message_index"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_is_current_version"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_id"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_created_at"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_conversation_id"), table_name="chat_messages")
    op.drop_index(op.f("ix_chat_messages_branch_id"), table_name="chat_messages")
    op.drop_table("chat_messages")

    op.drop_index(op.f("ix_conversations_user_id"), table_name="conversations")
    op.drop_index(op.f("ix_conversations_is_deleted"), table_name="conversations")
    op.drop_index(op.f("ix_conversations_id"), table_name="conversations")
    op.drop_table("conversations")

    op.drop_table("session")
    op.drop_table("thread")

    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
